{"version":3,"sources":["assets/team.png","components/List.js","components/Form.js","components/About.js","components/Routing.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","List","props","state","CHECK","UNCHECK","console","log","this","note","className","map","itemvalue","DONE","status","line","li","key","onClick","delete","text","task","Component","Form","heading","work","headingHandler","bind","workHandler","event","setState","target","value","src","Team","alt","width","height","type","placeholder","onChange","to","name","getHeading","About","hour","Date","getHours","str","Routing","App","item","filteredItem","filter","Key","updatedItem","tempItem","temp","Object","assign","newItem","now","prevState","concat","swal","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff5e382b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.cb657af8.png\";","import React,{Component} from 'react';\r\nimport '../styles/list.css';\r\n\r\nclass List extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      CHECK : \"fa-check-circle\",\r\n      UNCHECK : \"fa-circle-thin\",\r\n    }\r\n  }\r\n    \r\n   \r\n    \r\n\r\n    render(){\r\n        console.log(this.props.note);\r\n    return(\r\n        <div className=\"div_list\">\r\n         <ol>\r\n             {\r\n               this.props.note.map((itemvalue)=>{\r\n                              \r\n                const DONE = itemvalue.status ? this.state.CHECK : this.state.UNCHECK;\r\n                const line = itemvalue.status ? \"linethrough\" : \"\";\r\n                const li = itemvalue.status ? \"li_done\" : \"li_pending\";\r\n                  \r\n               return <li className={li} key={itemvalue.key}>\r\n                 <div className=\"li_div\">\r\n                    <i className={`fa ${DONE} co`} onClick={() => this.props.status(itemvalue.key)}></i>\r\n                    <i className=\"far fa-trash-alt\" onClick={() => this.props.delete(itemvalue.key)}></i>\r\n                    <h3 className={`${line}`}>{itemvalue.text}</h3>\r\n                    <h4 className={`${line}`}>{itemvalue.task}</h4>\r\n                    </div>\r\n            </li>;\r\n               })\r\n             }\r\n         </ol>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default List;","import React,{Component} from 'react';\r\nimport '../styles/form.css';\r\nimport Team from '../assets/team.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Form extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            heading:\"\",\r\n            work:\"\"\r\n        }\r\n        this.headingHandler = this.headingHandler.bind(this);\r\n        this.workHandler = this.workHandler.bind(this);\r\n    }\r\n\r\n    headingHandler(event){\r\n        this.setState({\r\n            heading:event.target.value\r\n        })\r\n    }\r\n\r\n    workHandler(event){\r\n        this.setState({\r\n            work:event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <div className=\"div_form\">\r\n            <div className=\"img_div\">\r\n                <img src={Team} alt=\"team\" width=\"100%\" height=\"230px\"/>\r\n            </div>\r\n            <div className=\"input_div\">\r\n                <div className=\"heading_input\">\r\n                    <input type=\"text\" placeholder=\"Heading..\" value={this.state.heading} onChange={this.headingHandler}/>\r\n                </div>\r\n                <div className=\"list_input\">\r\n                    <textarea type=\"text\" placeholder=\"Add A Note..\" value={this.state.work} onChange={this.workHandler}/>\r\n                </div>\r\n                <div className=\"button_div\">\r\n                <Link to='/' name=\"sudheer singh\"><button type=\"button\" onClick={()=>this.props.getHeading(this.state.heading,this.state.work)}>Add</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Form;","import React,{Component} from 'react';\r\nimport '../styles/About.css';\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"about_div\">\r\n                <div className=\"animate\">\r\n                <div className=\"animation_div\">\r\n                    <p> SCHEDULE <br/>YOUR <br/>DAY</p>\r\n                </div>\r\n                <div className=\"about_lines\">\r\n                    <h3>TO DO LIST APPLICATION</h3><br/>\r\n                    <p>To do list is an application where you can add , delete and mark a task done. This helps to plan you day in more efficient way.</p><br/>\r\n                    <p>Go to Add Note Type a heading and a task and Add it to list.Tap on the green circle to mark it as done and Tap on delete icon to delete that task.</p><br/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport '../styles/routing.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n   \r\nconst hour = new Date().getHours();\r\n\r\n\r\nlet str='';\r\nif((hour>=0) && (hour<12))\r\n{\r\n    str='Good Morning';\r\n}\r\nelse if((hour>=12) && (hour<=16))\r\n{\r\n    str='Good Afternoon';\r\n}\r\nelse{\r\n    str='Good evening';\r\n}\r\n\r\n\r\nconst Routing = () => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"div_routing\">\r\n           <h3 className=\"route_heading\">{str}</h3>\r\n            <div className=\"route_div\">\r\n                <div className=\"route_one\">\r\n                    <Link to='/'><button type=\"button\">View List</button></Link>\r\n                </div>\r\n                <div className=\"route_one\">\r\n                    <Link to='/form'><button type=\"button\">Add Note</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Routing;","import React,{Component} from 'react';\nimport '../styles/App.css';\nimport List from './List';\nimport Form from './Form';\nimport About from './About';\nimport Routing from './Routing';\nimport swal from 'sweetalert';\nimport {Route , Switch} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass App extends Component {\n\n  constructor(props){ \n    super(props);\n    this.state={\n      item:[]\n    }\n    this.getHeading = this.getHeading.bind(this);\n    this.delete = this.delete.bind(this);\n    this.status = this.status.bind(this);\n}\n\n  delete(key){\n    var filteredItem = this.state.item.filter(function (item) {\n      return (item.key !== key);\n    });\n   \n    this.setState({\n      item: filteredItem\n    });\n  }\n\n  status(Key){\n    \n    var updatedItem = this.state.item.map((tempItem)=>{\n          var temp = Object.assign({},tempItem);\n          if(temp.key===Key)\n          {\n          if(temp.status===false){\n            temp.status = true;\n          }else{\n            temp.status = false;\n          }\n         }\n         return temp;\n        })\n\n    this.setState({\n      item: updatedItem\n    });\n  }\n\n  getHeading(heading,work){\n    if((heading!==\"\")&&(work!==\"\"))\n    {\n    console.log(\"heading = \"+heading)\n    \n      var newItem = {\n        text:heading,\n        task:work,\n        key:Date.now(),\n        status:false\n      };\n\n\n      this.setState((prevState) => {\n        return{\n          item: prevState.item.concat(newItem),\n        };\n      });\n      swal(\"excellent\",\"Note Added successfully\",\"success\");\n    }else{\n      swal(\"something went wrong\",\"Please fill all inputs and try again\",\"error\");\n    }\n  }\n\n  render(){\n  return (\n    <div className=\"div_one\">\n      <div className=\"div_two\">\n        <Routing/>\n        <Switch> \n            <Route exact path=\"/\" component={() => <List note={this.state.item} delete={this.delete} status={this.status}/>}/>\n            <Route path=\"/about\" component={() => <About/>}/>\n            <Route path=\"/form\" component={() => <Form  getHeading={this.getHeading}/>}/>\n        </Switch>\n        <div className=\"about_button_div\">\n        <Link to='/about'><button type=\"button\">ABOUT</button></Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}